//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    void merge(vector<int>&arr,int start,int mid,int end)
    {
        vector<int>tmp(end-start+1);
        int left=start,right=mid+1,index=0;
        while(left<=mid && right<=end)
        {
            if(arr[left]<=arr[right])
            {
                tmp[index]=arr[left];
                index++;
                left++;
            }
            else
            {
                tmp[index]=arr[right];
                index++;
                right++;
            }
        }
        while(left<=mid)
        {
            tmp[index]=arr[left];
            index++;
            left++;
        }
        while(right<=end)
        {
            tmp[index]=arr[right];
            index++;
            right++;
        }
        index=0;
        while(start<=end)
        {
            arr[start]=tmp[index];
            index++;
            start++;
        }
    }
    void mergeSort(vector<int>& arr, int l, int r) 
    {
        if(l==r)
        {
            return;
        }
        
        int mid=l+(r-l)/2;        
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        merge(arr,l,mid,r);
    }
};

//{ Driver Code Starts.

int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        Solution obj;
        obj.mergeSort(arr, 0, arr.size() - 1);
        for (int i = 0; i < arr.size(); i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
        cout << "~" << endl;
    }
    return 0;
}

// } Driver Code Ends
